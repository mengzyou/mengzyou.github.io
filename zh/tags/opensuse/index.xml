<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>opensuse on Mengz's Space ...</title><link>/zh/tags/opensuse/</link><description>Recent content in opensuse on Mengz's Space ...</description><generator>Hugo -- gohugo.io</generator><language>en_US</language><lastBuildDate>Sat, 15 Jan 2022 10:04:00 +0800</lastBuildDate><atom:link href="/zh/tags/opensuse/index.xml" rel="self" type="application/rss+xml"/><item><title>升级OPENSUSE LEAP</title><link>/zh/posts/linux/opensuse-upgrade/</link><pubDate>Sat, 15 Jan 2022 10:04:00 +0800</pubDate><guid>/zh/posts/linux/opensuse-upgrade/</guid><description>openSUSE Leap 15.2自2022年1月4日起已结束生命周（EOL），还在使用该系统的用户未来将不会再收到任何形式的安全与维护更新。
建议所有用户尽快将系统升级到 - openSUSE Leap 15.3，该系统将获得安全补丁和更新直至2022年11月。下一个版本openSUSE Leap 15.4也将预计在2022年6月发布。
喜欢滚动更新版的的朋友，也可以借此机会从Leap版本切换到Tumbleweed版本。
openSUSE Leap的版本升级可以通过联网在线升级，也可以通过下载最新版本的ISO文件进行线下升级，这里面我们将看看如何在线升级。
openSUSE Leap在线升级 使用在线升级的方式有如下优势：
只需要下载需要更新的软件包，将节省不少带宽 在升级期间，虽然不推荐，但是你任然可以使用系统，只有在升级完成后需要重新启动 因为不需要下载ISO镜像文件，所以不需要DVD驱动器或者刻录USB启动盘，需要的仅仅是网络 当然在线升级也有如下缺点：
如果由于某些原因，导致升级过程被中断（例如突然断电，网络连接断开），升级进程无法继续，这有可能会留下一个被破坏的系统 如果有多个系统需要升级，那么下载ISO镜像可能会更省带宽 注意，如果你使用的是更旧的Leap版本，例如 15.1，请先升级到15.2之后，再升级到15.3 。
你可以使用如下命令查看当前版本
&amp;gt; lsb_release -d Description: openSUSE Leap 15.2 虽然正常的升级不会导致用户数据的丢失，但是为了安全，建议在升级之前备份自己重要的个人数据。
升级系统之前的准备 首先检查更新源是否存在并更新当前发行版本的软件包 # zypper repos --uri ... 29 | repo-update | 主更新源 | Yes | ( ) No | No | https://mirrors.tuna.tsinghua.edu.cn/opensuse/update/leap/15.2/oss/ 30 | repo-update-non-oss | 主更新源（非开源软件) | Yes | ( ) No | No | https://mirrors.</description></item><item><title>DOCKER运行微信桌面客户端</title><link>/zh/posts/container-tech/docker-wechat/</link><pubDate>Tue, 25 Feb 2020 13:36:58 +0800</pubDate><guid>/zh/posts/container-tech/docker-wechat/</guid><description>今天借助Github用户huan的盒装微信项目，在我的openSUSE Leap系统上使用Docker成功地运行封装的Windows上的微信客户端。
安装Docker 在Linux系统上安装Docker引擎是很容器的，请参考Docker入门，如果你也使用的是openSUSE Leap，执行如下命令安装Docker引擎:
$ sudo zypper ref $ sudo zypper in docker 启动微信客户端 注意： 在启动之前，需要设置主机系统的X服务的访问控制，使用如下的命令禁用主机上X服务的访问控制，允许所有客户端链接服务：
$ xhost + 关于[xhost]的更多信息，可参考(https://www.computerhope.com/unix/xhost.htm)。
huan/docker-wechat提供了一个启动脚本dochat.sh来执行容器镜像的下载，以及启动，可直接执行如下操作：
$ curl -sL https://raw.githubusercontent.com/huan/docker-wechat/master/dochat.sh | bash 当然也可以克隆Git代码库，然后执行dochat.sh脚本。
成功启动后如下图所示，使用手机扫描登录。
使用Docker Compose启动 dochat.sh是直接使用了docker run命令启动容器，也可以编写一个compose文件来使用docker-compose管理应用容器。例如我在目录 ~/dockerapp/ 下创建了一个 dochat.yml 文件。
version: &amp;#39;2.4&amp;#39; services: dochat: image: zixia/wechat container_name: dockerapps_dochat network_mode: bridge devices: - &amp;#34;/dev/video0:/dev/video0&amp;#34; - &amp;#34;/dev/snd:/dev/snd&amp;#34; volumes: - &amp;#34;/etc/localtime:/etc/localtime:ro&amp;#34; - &amp;#34;$HOME/.dochat/appdata:/home/user/.wine/drive_c/user/Application Data/&amp;#34; - &amp;#34;$HOME/.dochat/wechatfiles:/home/user/WeChat Files/&amp;#34; - &amp;#34;/tmp/.X11-unix:/tmp/.X11-unix&amp;#34; environment: - &amp;#34;DISPLAY=unix$DISPLAY&amp;#34; - &amp;#34;XMODIFIERS=@im=fcitx&amp;#34; - &amp;#34;GTK_IM_MODULE=fcitx&amp;#34; - &amp;#34;QT_IM_MODULE=fcitx&amp;#34; - &amp;#34;AUDIO_GID=492&amp;#34; - &amp;#34;VIDEO_GID=484&amp;#34; - &amp;#34;GID=100&amp;#34; - &amp;#34;UID=1000&amp;#34; - &amp;#34;DOCHAT_DEBUG=true&amp;#34; ipc: host privileged: true 首次启动时使用命令docker-compose -f ~/dockerapp/dochat.</description></item><item><title>BUMBLEBEE禁用NVIDIA显卡</title><link>/zh/posts/linux/bumlebee-nvidia/</link><pubDate>Wed, 25 Nov 2015 01:13:00 +0800</pubDate><guid>/zh/posts/linux/bumlebee-nvidia/</guid><description>如今有很多笔记本电脑都配备了双显卡，一块集成的 Intel 显卡，一块性能更好一些的 NVIDIA 显卡。
可是在平时的使用中可能根本用不上 NVIDIA 的那块显卡，那么为了使这样的笔记本电脑更省电，那么在平时的使用中可以禁用 NVIDIA 的显卡，而只使用集成的显卡。 Bumblebee 就是一个开源项目，在 Linux 上实现了 NVIDIA 的 Optimus 技术，在需要的时候使用 NVIDIA 的显卡。
我的电脑是 Lenovo ThinkPad T440s ，配备了如下的两块显卡：
1. 00:02.0 VGA compatible controller: Intel Corporation Haswell-ULT Integrated Graphics Controller (rev 09) 2. VGA compatible controller: NVIDIA Corporation GK208M [GeForce GT 730M] (rev ff) 而我使用的系统是 openSUSE Leap 42.1，下面就看看如何在该系统上禁用 NVIDIA 的显卡。
安装所需的软件包 首先添加如下安装源：
sudo zypper ar -r http://download.opensuse.org/repositories/X11:/Bumblebee/openSUSE_Leap_42.1/X11:Bumblebee.repo
刷新后，安装如下软件包：
bumblebee nvidia-bumblebee bbswitch bbswitch-kmp-default
如果你是64位系统，还请安装
nvidia-bumblebee-32bit</description></item><item><title>HOSTNAMECTL管理主机名</title><link>/zh/posts/linux/systemd-hostnamectl/</link><pubDate>Sun, 17 May 2015 13:35:00 +0800</pubDate><guid>/zh/posts/linux/systemd-hostnamectl/</guid><description>基于 systemd 的 Linux 系统中提供了一个新的名来 hostnamectl 来管理系统主机名。
当然除了 hostnamectl 之外，还是可以通过原来的 hostname 命令以及修改 /etc/HOSTNAME 来修改主机名。不过使用 hostnamectl 更方便。
hostnamectl的语法 hostnamectl [OPTIONS...] {COMMAND}
有如下 options :
&amp;ndash;static,&amp;ndash;transient,&amp;ndash;pretty 如果用于 status 命令，static 显示当前的静态主机名; transient 显示临时的主机名，一般用于网络临时设置; pretty 显示良好阅读主机名，如&amp;quot;Sam&amp;rsquo;s Computer&amp;quot;。 H, &amp;ndash;host=user@hostname 用来操作远程主机。 命令：
status ： 显示当前系统主机名和相关信息，可以使用 &amp;ndash;static, &amp;ndash;transient, &amp;ndash;pretty 仅显示指定内容。 set-hostname [NAME] ： 设置系统主机名，默认改变 pretty，static，及 transient 。 指定相应选项只改变相应主机名。 set-icon-name [NAME] ： 设置系统 Icon 名，用于一些图形应用来可视化主机。Icon 名需要符合 Icon 名规范。 set-chassis [TYPE] ： 设置 chassis 类型，用于一些图形应用来可视化主机或者改变用户界面。当前设置以下类型：&amp;ldquo;desktop&amp;rdquo;，&amp;ldquo;laptop&amp;rdquo;，&amp;ldquo;server&amp;rdquo;，&amp;ldquo;tablet&amp;rdquo;，&amp;ldquo;handset&amp;rdquo;，还有 &amp;ldquo;vm&amp;rdquo; 和 &amp;ldquo;container&amp;rdquo;。 示例 查看当前主机名及相关信息： $sudo hostnamectl status</description></item><item><title>OPENSUSE上的ZYPPER包管理器</title><link>/zh/posts/linux/opensuse-zypper/</link><pubDate>Mon, 27 Apr 2015 08:07:00 +0800</pubDate><guid>/zh/posts/linux/opensuse-zypper/</guid><description>自己在使用 opensuse，自己非常喜欢 opensuse 的包管理命令行工具 zypper。这里做一个笔记，也希望能看到这个篇文章的朋友能够快速地掌握 zypper 的用法。
CentOS 和 Redhat 使用的是 yum 作为命令行的软件包管理工具。
Debian 和 Ubuntu 使用的是 apt-get。
在 Debian/Ubuntu 上还有另一个软件包管理工具 - aptitude 。
同样，在 SUSE/opensuse Linux 上，zypper 就是其命令行的软件包管理工具。
从高层次的角度，你可以使用 zypper 命令管理两种不同的东西：
管理软件包： 使用 zypper 来安装，删除，更新以及查询本地的或者远端媒体上的软件包。 管理软件源： 也可以使用 zypper 管理软件源信息，你可以在命令行添加，删除，打开或者关闭某个软件源。它还可以设置在安装过程中软件源的优先级。 I. 使用 zypper 管理软件包 1. 安装软件包 使用如下语法安装一个软件包：
zypper install &amp;lt;package name&amp;gt;
如，执行一下命令来安装 火狐浏览器 和它的依赖：
# zypper install MozillaFirefox Loading repository data... Reading installed packages... Resolving package dependencies... The following NEW packages are going to be installed: MozillaFirefox MozillaFirefox-branding-SLED The following packages are not supported by their vendor: MozillaFirefox MozillaFirefox-branding-SLED 2 new packages to install.</description></item><item><title>OPENSUSE上的定时任务</title><link>/zh/posts/linux/opensuse-cronjob/</link><pubDate>Wed, 02 Feb 2011 15:03:32 +0800</pubDate><guid>/zh/posts/linux/opensuse-cronjob/</guid><description>前段时间，发现每次开机后一段时间机器就会很慢，似乎在跑些什么任务，于是查看系统任务，发现有updatadb（为locate构建数据索引）在运行。这些任务是由 cron 触发的。
于是我用crontab命令来查看当前的cron任务列表，可是得到如下返回：
$sudo crontab -u root -l
root’s password:
no crontab for root
可是我发现在*/etc/cron.daily/目录下有一些脚本， 其中就有一个suse-updatedb*。那些进程就是由这个脚本启动的。 接下来，我查看了一下*/etc/crontab*文件:
-*/15 * * * * root test -x /usr/lib/cron/run-crons &amp;amp;&amp;amp; /usr/lib/cron/run-crons &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
这说明系统会每15分钟调用一次 /usr/lib/cron/run-crons 脚本，接着查看了一下那个脚本，其中发现了一行注释：
# if DAILY_TIME set, run only at a fixed time of day
而DAILY_TIME这个变量应该在*/etc/sysconfig/cron*配置文件里指定，在文件中有这么一段：
## Type: string
## Default: “”
#
# At which time cron.daily should start. Default is 15 minutes after booting
# the system. Example setting would be “14:00″.</description></item></channel></rss>